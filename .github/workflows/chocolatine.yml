name: Chocolatine

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  MIRROR_URL: git@github.com:EpitechPromo2027/B-DOP-200-NCE-2-1-chocolatine-brahim.caparros.git
  EXECUTABLES:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  enforce-good-practices:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run coding style checker
        run: |
          checker_output=$(./check.sh $(pwd) $(pwd))
          echo "$checker_output"
          if [[ $checker_output =~ "coding style errors" ]]; then
            echo "error: coding style errors detected"
            exit 1
          fi

  build-and-test:
    needs: enforce-good-practices
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and test
        run: |
          IFS=',' read -ra EXEC_ARRAY <<< "${{ env.EXECUTABLES }}"
          for exec in "${EXEC_ARRAY[@]}"; do
            exec_dir=$(dirname "$exec")
            exec_name=$(basename "$exec")
            cd $exec_dir
            make $exec_name
            # Run any required tests here
            cd -
          done

  push_to_mirror:
    if: github.event_name == 'push'
    needs: check_program_compilation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$GIT_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

        env:
          GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

      - name: Push to mirror repository
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote add mirror ${{ env.MIRROR_URL }}
          GIT_SSH_COMMAND="ssh -i $(pwd)/private_key" git push --mirror mirror

  check_program_compilation:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check program compilation
        run: |
          timeout --preserve-status 2m make

      - name: Clean build artifacts
        run: |
          make clean

      - name: Verify executables
        run: |
          IFS=',' read -ra EXEC_ARRAY <<< "${{ env.EXECUTABLES }}"
          for exec in "${EXEC_ARRAY[@]}"; do
            if [[ ! -x "$exec" ]]; then
              echo "Error: $exec not found or not executable"
              exit 1
            fi
          done
